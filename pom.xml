<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.github.zabbixjavaclient</groupId>
	<artifactId>zabbix-java-client</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<name>Java Client for Zabbix Api</name>

	<url>https://github.com/Ameausoone/zabbix-java-client</url>

	<scm>
		<url>https://github.com/Ameausoone/zabbix-java-client.git</url>
	</scm>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<skipTests>false</skipTests>
		<!-- see https://gist.github.com/delor/5916802 By default surefire configuration 
			includes tests matching "/Test*.java", "/Test.java" or "*/TestCase.java" 
			pattern. By default failsafe configuration includes tests matching "*/IT*.java", 
			"/*IT.java" or "/*ITCase.java" pattern. Usage: mvn install -DskipUTs : Skips 
			Unit tests mvn install -DskipITs : Skips Integration tests mvn install -DskipTests 
			: Skips both Unit and Integration Tests -->
		<skipITs>${skipTests}</skipITs>
		<skipUTs>${skipTests}</skipUTs>
	</properties>

	<dependencies>
		<dependency>
			<groupId>com.github.briandilley.jsonrpc4j</groupId>
			<artifactId>jsonrpc4j</artifactId>
			<version>1.1</version>
			<exclusions>
				<exclusion>
					<artifactId>jackson-core</artifactId>
					<groupId>com.fasterxml.jackson.core</groupId>
				</exclusion>
				<exclusion>
					<artifactId>jackson-databind</artifactId>
					<groupId>com.fasterxml.jackson.core</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.5.3</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>2.5.3</version>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
			<version>1.16.4</version>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>18.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.4</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>5.1.3.Final</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jul-to-slf4j</artifactId>
			<scope>compile</scope>
			<optional>true</optional>
			<version>1.7.10</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.12</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.1.3</version>
			<optional>true</optional>
		</dependency>
		<!-- Testing dependencies -->
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>6.8.21</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.easytesting</groupId>
			<artifactId>fest-assert-core</artifactId>
			<version>2.0M10</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-yaml</artifactId>
			<version>2.5.3</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.2</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.3</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.16</version>
				<configuration>
					<skipTests>${skipUTs}</skipTests>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.16</version>
				<configuration>
					<skipTests>${skipTests}</skipTests>
					<skipITs>${skipITs}</skipITs>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.jolokia</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.11.2</version>
				<configuration>
					<images>

						<image>
							<alias>zabbix</alias>
							<name>berngp/docker-zabbix</name>
							<run>
								<!-- command>mongod </command -->
								<ports>
									<port>10051:10051</port>
									<port>10052:10052</port>
									<port>80:80</port>
									<port>2812:2812</port>
								</ports>
								<log>
									<enabled>true</enabled>
									<color>red</color>
								</log>
								<wait>
									<url>http://localhost:8080/zabbix/</url>
<!-- 									<time>10000</time> -->
								</wait>
							</run>


						</image>
					</images>
				</configuration>

				<!-- Connect start/stop to pre- and post-integration-test phase, respectively 
					if you want to start your docker containers during integration tests -->
				<executions>
					<execution>
						<id>start</id>
						<phase>pre-integration-test</phase>
						<goals>
							<!-- "build" should be used to create the images with the artefacts -->
							<!-- goal>build</goal -->
							<goal>start</goal>
						</goals>
					</execution>
					<execution>
						<id>stop</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>